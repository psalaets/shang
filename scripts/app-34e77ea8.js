angular.module("app",["app.models","app.services","app.title","app.new-game","app.play-game","app.scorecard","app.templates","ngRoute","LocalForageModule"]),function(e){e.module("app").config(["$routeProvider",function(e){e.when("/",{templateUrl:"title/title.html",controller:"TitleController",controllerAs:"shang"}).when("/games/new",{templateUrl:"new-game/new-game.html",controller:"NewGameController",controllerAs:"setup",resolve:{availablePlayers:["persistence",function(e){return e.getPlayers()}]}}).when("/games/:id",{templateUrl:"play-game/play-game.html",controller:"PlayGameController",controllerAs:"current",resolve:{currentGame:["$route","persistence",function(e,n){var t=e.current.params.id;return n.loadGame(t)}]}})}])}(angular),angular.module("app.models",[]),function(e){e.module("app.models").factory("Game",["Round","Player",function(e,n){function t(){this.players=[],this.startTime=null,this.rounds=[]}function r(e){for(var n=0;n<e.length;n++)if(e[n].active)return n;return null}var a=["2 Groups","1 Run 1 Group","2 Runs","3 Groups","2 Groups 1 Run","2 Runs 1 Group","3 Runs"];t.fromData=function(r){var a=new t;return a.players=r.players.map(function(e){return n.fromData(e)}),a.rounds=r.rounds.map(function(n){return e.fromData(n)}),a.id=r.id,a.startTime=new Date(r.startTime),a};var o=t.prototype;return o.addPlayer=function(e){var t=new n(e);this.players.push(t)},o.start=function(){var n=this.players.map(function(e){return e.name});this.rounds=a.map(function(t){return new e(t,n)},this),this.rounds[0].active=!0,this.startTime=new Date},o.getPlayer=function(e){return this.players.filter(function(n){return n.name===e})[0]||null},o.totalScore=function(e){return this.rounds.reduce(function(n,t){var r=t.scoreFor(e);return n+r.score||0},0)},o.calculateTotalScores=function(){this.players.forEach(function(e){e.totalScore=this.totalScore(e.name)},this)},o.calculateRankings=function(){var e=this.players.slice().sort(function(e,n){return e.totalScore-n.totalScore});e.forEach(function(e,n,t){var r=t[n-1];e.rank=r&&e.totalScore===r.totalScore?r.rank:n+1})},o.nextRound=function(){var e=r(this.rounds);this.rounds[e].active=!1,this.rounds[e].completed=!0,this.calculateTotalScores(),this.calculateRankings(),this.isDone()||(this.rounds[e+1].active=!0)},o.isDone=function(){return this.rounds.every(function(e){return e.completed})},t}])}(angular),function(e){var n=e.module("app.models");n.factory("Round",["RoundScore",function(e){function n(n,t){this.name=n,this.active=!1,this.completed=!1,this.scores=t.map(function(n){return new e(n)})}n.fromData=function(t){var r=new n(t.name,[]);return r.active=t.active,r.completed=t.completed,r.scores=t.scores.map(function(n){return e.fromData(n)}),r};var t=n.prototype;return t.scoreFor=function(e){return this.scores.filter(function(n){return n.player==e})[0]||null},t.allScoresReported=function(){return this.scores.every(function(e){return e.scoreReported()})},n}])}(angular),function(e){function n(e){this.player=e,this.score=null}e.module("app.models").value("RoundScore",n);var t=n.prototype;t.scoreReported=function(){return null!==this.score&&void 0!==this.score},n.fromData=function(e){var t=new n(e.player);return t.score=e.score,t}}(angular),function(e){function n(e){this.name=e,this.wilds=0,this.rank=null,this.totalScore=null}e.module("app.models").value("Player",n),n.fromData=function(e){var t=new n(e.name);return t.rank=e.rank,t.wilds=e.wilds,t.totalScore=e.totalScore,t};var t=n.prototype;t.addWild=function(){this.wilds+=1},t.removeWild=function(){this.wilds&&(this.wilds-=1)}}(angular),angular.module("app.services",[]),function(e){function n(e){return{goToGameSetup:function(){e.path("/games/new")},goToGame:function(n){e.path("/games/"+n)},goToTitle:function(){e.path("/")}}}e.module("app.services").factory("navigation",n),n.$inject=["$location"]}(angular),function(e){e.module("app.services").factory("persistence",["$localForage","Game",function(e,n){function t(){return e.getItem("nextGameId").then(function(n){return n=n||0,e.setItem("nextGameId",n+1)})}function r(e){return"game-"+e}function a(){return e.getItem("players").then(function(n){return n?n:e.setItem("players",[])})}return{saveGame:function(n){function a(n){return e.setItem(r(n.id),n).then(function(){return n})}function o(e){return n.id=e,n}return n.id?a(n):t().then(o).then(a)},loadGame:function(t){return e.getItem(r(t)).then(function(e){return n.fromData(e)})},deleteGame:function(n){return e.removeItem(r(n))},getPlayers:function(){return a().then(function(e){return e.sort()})},setPlayers:function(n){return e.setItem("players",n)}}}])}(angular),function(e){function n(){return{minimumPlayersToStart:3,decksNeeded:function(e){return Math.ceil(e/2)}}}e.module("app.services").factory("rules",n)}(angular),angular.module("app.new-game",[]),function(e){function n(e,n,t,r,a){this.availablePlayers=e,this.selectedPlayers=[],this.enteredName="",this.minimumPlayersToStart=n.minimumPlayersToStart,this.decksNeeded=null,this.updateDecksNeeded=function(){this.decksNeeded=n.decksNeeded(this.selectedPlayers.length)},this.selectPlayer=function(e){this.selectedPlayers.push(e),this.updateDecksNeeded()},this.deselectPlayer=function(e){var n=this.selectedPlayers.indexOf(e);-1!=n&&(this.selectedPlayers.splice(n,1),this.updateDecksNeeded())},this.isSelected=function(e){return-1!=this.selectedPlayers.indexOf(e)},this.toggleSelection=function(e){this.isSelected(e)?this.deselectPlayer(e):this.selectPlayer(e)},this.selectEnteredPlayer=function(){this.enteredName&&(this.makeAvailable(this.enteredName),this.selectPlayer(this.enteredName),this.enteredName="")},this.makeAvailable=function(e){-1==this.availablePlayers.indexOf(e)&&this.availablePlayers.unshift(e)},this.canBeginGame=function(){return this.selectedPlayers.length>=this.minimumPlayersToStart},this.beginGame=function(){function e(e){return t.setPlayers(e)}function n(){return t.saveGame(l)}function o(){r.goToGame(l.id)}var l=new a;return this.selectedPlayers.forEach(l.addPlayer,l),l.start(),e(this.availablePlayers).then(n).then(o)}}e.module("app.new-game").controller("NewGameController",n),n.$inject=["availablePlayers","rules","persistence","navigation","Game"]}(angular),angular.module("app.play-game",[]),function(e){function n(e){this.game=e}e.module("app.play-game").controller("PlayGameController",n),n.$inject=["currentGame"]}(angular),angular.module("app.title",[]),function(e){function n(e){this.newGame=function(){e.goToGameSetup()}}e.module("app.title").controller("TitleController",n),n.$inject=["navigation"]}(angular),angular.module("app.scorecard",[]),function(e){function n(){return{restrict:"E",templateUrl:"scorecard/scorecard.html",scope:{game:"="},controllerAs:"vm",bindToController:!0,controller:["$scope","persistence","navigation","$interval",function(e,n,t,r){this.minutesElapsed=0;var a=r(function(){this.minutesElapsed+=1}.bind(this),6e4);e.$on("$destroy",function(){r.cancel(a)}),e.$on("round-finished",function(){this.game.nextRound(),n.saveGame(this.game)}.bind(this)),this.gameOver=function(){t.goToTitle()}}]}}e.module("app.scorecard").directive("scorecard",n)}(angular),function(e){function n(){return{restrict:"A",templateUrl:"scorecard/round-row.html",scope:{round:"=",lastRound:"@"},controllerAs:"vm",bindToController:!0,controller:["$scope",function(e){this.nextRoundButtonLabel="true"==this.lastRound?"Game Over":"Next Round",this.readyForNextRound=function(){return this.round.active&&this.round.allScoresReported()}.bind(this),this.nextRound=function(){e.$emit("round-finished")}}]}}e.module("app.scorecard").directive("roundRow",n)}(angular),function(e){function n(){return{restrict:"A",templateUrl:"scorecard/total-row.html",scope:{players:"="},bindToController:!0,controllerAs:"vm",controller:function(){}}}e.module("app.scorecard").directive("totalRow",n)}(angular),function(e){function n(){return{restrict:"A",templateUrl:"scorecard/wild-row.html",scope:{players:"=",showButtons:"&"},bindToController:!0,controllerAs:"vm",controller:function(){}}}e.module("app.scorecard").directive("wildRow",n)}(angular),function(e){function n(){return{restrict:"A",templateUrl:"scorecard/rank-row.html",scope:{players:"="},bindToController:!0,controllerAs:"vm",controller:function(){this.isFirst=function(e){return 1===e.rank}}}}e.module("app.scorecard").directive("rankRow",n)}(angular),function(e){function n(){return{restrict:"A",templateUrl:"scorecard/player-row.html",scope:{players:"="},controllerAs:"vm",bindToController:!0,controller:function(){}}}e.module("app.scorecard").directive("playerRow",n)}(angular),function(e){function n(){return function(e){e=e||0;var n=Math.floor(e/60),t=e%60,r=[];return n&&r.push(n+" hr"),t&&r.push(t+" min"),r.length||r.push("less than 1 minute"),r.join(" ")}}e.module("app.scorecard").filter("duration",n)}(angular),function(e){function n(){return function(e){if(!e)return"";if(11==e)return"11th";if(12==e)return"12th";if(13==e)return"13th";var n=e.toString().slice(-1),t={1:"st",2:"nd",3:"rd"}[n]||"th";return e+t}}e.module("app.scorecard").filter("rank",n)}(angular),angular.module("app.templates",[]),angular.module("app.templates").run(["$templateCache",function(e){e.put("new-game/new-game.html",'<div class="container">\n    <div class="row">\n        <div class="col-xs-6">\n            <h2>Select Players</h2>\n            <div ng-if="setup.availablePlayers.length">\n                <div class="player-name" ng-class="{\'bg-primary\': setup.isSelected(player)}" ng-repeat="player in setup.availablePlayers" ng-click="setup.toggleSelection(player)">\n                    {{::player}}\n                    <span ng-show="setup.isSelected(player)" class="pull-right glyphicon glyphicon-ok"></span>\n                </div>\n\n                <div ng-if="!setup.canBeginGame()" class="alert alert-danger">\n                    <strong>Add or select more players</strong>\n                    <p>Need at least {{::setup.minimumPlayersToStart}} selected to begin game.</p>\n                </div>\n                <div ng-if="setup.canBeginGame()">\n                    <button ng-click="setup.beginGame()" class="btn btn-success btn-lg btn-block">\n                        Begin Game<br/>\n                        <small>({{setup.selectedPlayers.length}} players, {{setup.decksNeeded}} decks)</small>\n                    </button>\n                </div>\n            </div>\n            <div ng-if="!setup.availablePlayers.length">\n                <div class="alert alert-info">\n                    <strong>First game on this device?</strong>\n                    <p>Enter some players on the right to get started.</p>\n                </div>\n            </div>\n        </div>\n        <div class="col-xs-6">\n            <h2>Add New Player</h2>\n            <div class="input-group">\n                <form ng-submit="setup.selectEnteredPlayer()">\n                    <input type="text" class="form-control" placeholder="Player name" ng-model="setup.enteredName">\n                    <span class="input-group-btn">\n                        <input class="btn btn-default" type="submit" value="Add"></input>\n                    </span>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>'),e.put("play-game/play-game.html",'<scorecard game="current.game"></scorecard>'),e.put("scorecard/player-row.html",'<th></th>\n<th ng-repeat="player in vm.players">\n    {{::player.name}}\n</th>'),e.put("scorecard/rank-row.html",'<td>\n    <strong>Rank</strong>\n</td>\n<td ng-class="{\'first-place\': vm.isFirst(player)}" ng-repeat="player in vm.players">\n    {{player.rank | rank}}\n    <span ng-show="player.rank">({{::player.name}})</span>\n</td>'),e.put("scorecard/round-row.html",'<td>\n    {{::vm.round.name}}\n    <button ng-click="vm.nextRound()" ng-show="vm.readyForNextRound()" class="btn btn-primary btn-xs pull-right">{{vm.nextRoundButtonLabel}}</button>\n</td>\n<td ng-repeat="roundScore in vm.round.scores">\n    <div ng-if="vm.round.active">\n        <input type="number" ng-model="roundScore.score"/>\n    </div>\n    <div ng-if="!vm.round.active">\n        {{::roundScore.score}}\n    </div>\n</td>\n'),e.put("scorecard/scorecard.html",'<div class="container-fluid">\n    <div class="row">\n        <div class="col-xs-6">\n            <strong>Started:</strong> {{::vm.game.startTime | date:\'short\'}}\n        </div>\n        <div class="col-xs-6">\n            <strong>Session Time:</strong> {{vm.minutesElapsed | duration}}\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xs-12">\n            <table class="table table-bordered">\n                <tr player-row players="vm.game.players"></tr>\n                <tr wild-row show-buttons="!vm.game.isDone()" players="vm.game.players"></tr>\n                <tr round-row ng-class="{active: round.active}" ng-repeat="round in vm.game.rounds" round="round" last-round="{{$last}}"></tr>\n                <tr total-row players="vm.game.players"></tr>\n                <tr rank-row players="vm.game.players"></tr>\n            </table>\n\n            <button ng-show="vm.game.isDone()" ng-click="vm.gameOver()" class="btn btn-primary">Return to Title</button>\n        </div>\n    </div>\n</div>'),e.put("scorecard/total-row.html",'<td>\n    <strong>Total</strong>\n</td>\n<td ng-repeat="player in vm.players">\n    {{player.totalScore}}\n</td>'),e.put("scorecard/wild-row.html",'<td>Wilds</td>\n<td ng-repeat="player in vm.players">\n    <div ng-if="vm.showButtons()" class="btn-group">\n      <button type="button" ng-click="player.addWild()" class="btn btn-default">\n          <span class="glyphicon glyphicon-plus"></span>\n      </button>\n      <button type="button" class="btn btn-default">\n          {{player.wilds}}\n      </button>\n      <button type="button" ng-click="player.removeWild()" class="btn btn-default">\n          <span class="glyphicon glyphicon-minus"></span>\n      </button>\n    </div>\n    <div ng-if="!vm.showButtons()">\n      {{player.wilds}}\n    </div>\n</td>'),e.put("title/title.html",'<div class="container">\n    <div class="title">\n        <h1>Shanghai Rummy</h1>\n        <button class="btn btn-primary" ng-click="shang.newGame()">New Game</button>\n    </div>\n</div>')}]);